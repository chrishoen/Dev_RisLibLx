#pragma once

/*==============================================================================
Console input history.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Con
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constants.

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides global program console i/o facility.

class InputHistory
{
public:
   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   static const int cStringSize = 400;
   static const int cArraySize = 40;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Array of strings.
   char mStringArray[cArraySize][cStringSize];

   // Array of pointers into the array of strings.
   char* mPtr[cArraySize];

   // Array indices.
   int mOldest;            // The oldest string in the array.
   int mNewest;            // The newest string in the array.
   int mNextNewest;        // The next newest string will go here.  
   int mSize;              // Number of strings in the array.
   int mUpCount;           // Number of up arrows - down arrows.

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   InputHistory();
   void resetVariables();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Put a string to the array for when enter is entered at 
   // the console input.
   void putStringForEnter(char* aInputString);

   // Get a string from the array for when an up arrow is entered at
   // the console input.
   void getStringForUpArrow(char* aInputString);

   // Get a string from the array for when a down arrow is entered at
   // the console input.
   void getStringForDownArrow(char* aInputString);

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Show.
   void show();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

