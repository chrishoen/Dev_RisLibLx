//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"

#include "prnPrint.h"

#include "risLogic.h"

namespace Ris
{
namespace Logic
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

AndOrLatch::AndOrLatch()
{
   reset();
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Resets.

void AndOrLatch::reset()
{
   mMask  = 0;
   mLatch = 0;
}

void AndOrLatch::resetMask()
{
   mMask  = 0;
}

void AndOrLatch::resetLatch()
{
   mLatch = 0;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Set bits.

void AndOrLatch::setMaskBit(int aBitNum)
{
   mMask |= (1 << aBitNum);
}

void AndOrLatch::clearMaskBit(int aBitNum)
{
   mMask &= ~(1 << aBitNum);
}

void AndOrLatch::setLatchBit(int aBitNum)
{
   mLatch |= (1 << aBitNum);
}

void AndOrLatch::clearLatchBit(int aBitNum)
{
   mLatch &= ~(1 << aBitNum);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Test conditions.

bool AndOrLatch::isAny()
{
   return (mMask & mLatch) != 0;
}

bool AndOrLatch::isAll()
{
   unsigned tMask = mMask;
   return (tMask & mLatch) == tMask;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace
}//namespace

