#ifndef _SOME_MYCLASS_H_
#define _SOME_MYCLASS_H_

/*==============================================================================
Some class of mine.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "risCmdLineFile.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class encapsulates parameters for the class that follows in this file.
// it inherits from BaseCmdLineExec so that it can process commands from a
// nested command file to set its parameters.

class MyClassParms : public Ris::BaseCmdLineExec
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   double  mEX1;          // Desired expectation
   double  mEX2;          // Desired expectation
   double  mEX3;          // Desired expectation
   double  mEX4;          // Desired expectation

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Constructor and parameter initialization.

   // Constructor.
   MyClassParms();
   void reset();

   // Execute a command line in the section of the command file that is specific
   // to this object and set member variables accordingly. When an "End" is
   // encountered, pop back out of the section and return control to the parent
   // executive.
   void execute(Ris::CmdLineCmd* aCmd);

   // Show.
   void show(char* aLabel);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides something for me.
 
class MyClass
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Input parameters.
   MyClassParms mParms;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   MyClass();
   MyClass(MyClassParms aParms);
   void reset();
   void show();

   // Run somewhere.
   void doRun1();
};

//******************************************************************************
}//namespace

#endif

