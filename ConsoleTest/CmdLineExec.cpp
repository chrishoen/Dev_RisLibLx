#include "stdafx.h"


#include "CmdLineExec.h"

#include "someTimerThread.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************
CmdLineExec::CmdLineExec()
{
}
//******************************************************************************
//******************************************************************************
//******************************************************************************
void CmdLineExec::reset()
{
}
//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::execute(Ris::CmdLineCmd* aCmd)
{
   if(aCmd->isCmd("TP"    ))  Some::gTimerThread->mTPFlag = aCmd->argBool(1);
   if(aCmd->isCmd("GO1"   ))  executeGo1     (aCmd);
   if(aCmd->isCmd("GO2"   ))  executeGo2     (aCmd);
   if(aCmd->isCmd("GO3"   ))  executeGo3     (aCmd);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo1 (Ris::CmdLineCmd* aCmd)
{
   Prn::print(Prn::View11, "GO1****************************");
   while (true)
   {
      int tChar = 0;
      tChar = getc(stdin);
//    tChar = getchar();
      Prn::print(Prn::View11, "char %d", tChar);
      if (tChar == 27)
      {
         Prn::print(Prn::View11, "escape");
         break;
      }
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo2 (Ris::CmdLineCmd* aCmd)
{
   Prn::print(Prn::View11, "GO2****************************");

   char tLine[200];
   int tChar;
   while (true)
   {
      tChar = getc(stdin);
      ungetc(tChar, stdin);
      Prn::print(Prn::View11, "char %d",tChar);
      if (tChar == '\n')
      {
         Prn::print(Prn::View11, "newline");
         break;
      }

      fgets(tLine, 200, stdin);
      my_trim_new_line(tLine);

      int tLength = (int)strlen(tLine);
      Prn::print(Prn::View11, "line %3d %s", tLength, tLine);

      if (strcmp(tLine, "e") == 0)
      {
         Prn::print(Prn::View11, "exit");
         break;
      }
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void CmdLineExec::executeGo3 (Ris::CmdLineCmd* aCmd)
{
}



